/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_aframe_click_drag_component__ = __webpack_require__(/*! aframe-click-drag-component */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_aframe_click_drag_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_aframe_click_drag_component__);\n\n__WEBPACK_IMPORTED_MODULE_0_aframe_click_drag_component___default()(window.AFRAME);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL21haW4uanM/N2EyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVnaXN0ZXJDbGlja0RyYWcgZnJvbSAnYWZyYW1lLWNsaWNrLWRyYWctY29tcG9uZW50JztcbnJlZ2lzdGVyQ2xpY2tEcmFnKHdpbmRvdy5BRlJBTUUpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!***************************************************************!*\
  !*** ./node_modules/aframe-click-drag-component/lib/index.js ***!
  \***************************************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = aframeDraggableComponent;\n\nvar _deepEqual = __webpack_require__(/*! deep-equal */ 2);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar COMPONENT_NAME = 'click-drag';\nvar DRAG_START_EVENT = 'dragstart';\nvar DRAG_MOVE_EVENT = 'dragmove';\nvar DRAG_END_EVENT = 'dragend';\n\nvar TIME_TO_KEEP_LOG = 100;\n\nfunction forceWorldUpdate(threeElement) {\n\n  var element = threeElement;\n  while (element.parent) {\n    element = element.parent;\n  }\n\n  element.updateMatrixWorld(true);\n}\n\nfunction forEachParent(element, lambda) {\n  while (element.attachedToParent) {\n    element = element.parentElement;\n    lambda(element);\n  }\n}\n\nfunction someParent(element, lambda) {\n  while (element.attachedToParent) {\n    element = element.parentElement;\n    if (lambda(element)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction cameraPositionToVec3(camera, vec3) {\n\n  vec3.set(camera.components.position.data.x, camera.components.position.data.y, camera.components.position.data.z);\n\n  forEachParent(camera, function (element) {\n\n    if (element.components && element.components.position) {\n      vec3.set(vec3.x + element.components.position.data.x, vec3.y + element.components.position.data.y, vec3.z + element.components.position.data.z);\n    }\n  });\n}\n\nfunction localToWorld(THREE, threeCamera, vector) {\n  forceWorldUpdate(threeCamera);\n  return threeCamera.localToWorld(vector);\n}\n\nvar _ref = function unprojectFunction() {\n\n  var initialized = false;\n\n  var matrix = void 0;\n\n  function initialize(THREE) {\n    matrix = new THREE.Matrix4();\n\n    return true;\n  }\n\n  return {\n    unproject: function unproject(THREE, vector, camera) {\n\n      var threeCamera = camera.components.camera.camera;\n\n      initialized = initialized || initialize(THREE);\n\n      vector.applyProjection(matrix.getInverse(threeCamera.projectionMatrix));\n\n      return localToWorld(THREE, threeCamera, vector);\n    }\n  };\n}(),\n    unproject = _ref.unproject;\n\nfunction clientCoordsTo3DCanvasCoords(clientX, clientY, offsetX, offsetY, clientWidth, clientHeight) {\n  return {\n    x: (clientX - offsetX) / clientWidth * 2 - 1,\n    y: -((clientY - offsetY) / clientHeight) * 2 + 1\n  };\n}\n\nvar _ref2 = function screenCoordsToDirectionFunction() {\n\n  var initialized = false;\n\n  var mousePosAsVec3 = void 0;\n  var cameraPosAsVec3 = void 0;\n\n  function initialize(THREE) {\n    mousePosAsVec3 = new THREE.Vector3();\n    cameraPosAsVec3 = new THREE.Vector3();\n\n    return true;\n  }\n\n  return {\n    screenCoordsToDirection: function screenCoordsToDirection(THREE, aframeCamera, _ref3) {\n      var clientX = _ref3.x,\n          clientY = _ref3.y;\n\n\n      initialized = initialized || initialize(THREE);\n\n      // scale mouse coordinates down to -1 <-> +1\n\n      var _clientCoordsTo3DCanv = clientCoordsTo3DCanvasCoords(clientX, clientY, 0, 0, // TODO: Replace with canvas position\n      window.innerWidth, window.innerHeight),\n          mouseX = _clientCoordsTo3DCanv.x,\n          mouseY = _clientCoordsTo3DCanv.y;\n\n      mousePosAsVec3.set(mouseX, mouseY, -1);\n\n      // apply camera transformation from near-plane of mouse x/y into 3d space\n      // NOTE: This should be replaced with THREE code directly once the aframe bug\n      // is fixed:\n      /*\n            cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n            const {x, y, z} = new THREE\n             .Vector3(mouseX, mouseY, -1)\n             .unproject(aframeCamera.components.camera.camera)\n             .sub(cameraPosAsVec3)\n             .normalize();\n      */\n      var projectedVector = unproject(THREE, mousePosAsVec3, aframeCamera);\n\n      cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n\n      // Get the unit length direction vector from the camera's position\n\n      var _projectedVector$sub$ = projectedVector.sub(cameraPosAsVec3).normalize(),\n          x = _projectedVector$sub$.x,\n          y = _projectedVector$sub$.y,\n          z = _projectedVector$sub$.z;\n\n      return { x: x, y: y, z: z };\n    }\n  };\n}(),\n    screenCoordsToDirection = _ref2.screenCoordsToDirection;\n\n/**\n * @param planeNormal {THREE.Vector3}\n * @param planeConstant {Float} Distance from origin of the plane\n * @param rayDirection {THREE.Vector3} Direction of ray from the origin\n *\n * @return {THREE.Vector3} The intersection point of the ray and plane\n */\n\n\nfunction rayPlaneIntersection(planeNormal, planeConstant, rayDirection) {\n  // A line from the camera position toward (and through) the plane\n  var distanceToPlane = planeConstant / planeNormal.dot(rayDirection);\n  return rayDirection.multiplyScalar(distanceToPlane);\n}\n\nvar _ref4 = function directionToWorldCoordsFunction() {\n\n  var initialized = false;\n\n  var direction = void 0;\n  var cameraPosAsVec3 = void 0;\n\n  function initialize(THREE) {\n    direction = new THREE.Vector3();\n    cameraPosAsVec3 = new THREE.Vector3();\n\n    return true;\n  }\n\n  return {\n    /**\n     * @param camera Three.js Camera instance\n     * @param Object Position of the camera\n     * @param Object position of the mouse (scaled to be between -1 to 1)\n     * @param depth Depth into the screen to calculate world coordinates for\n     */\n    directionToWorldCoords: function directionToWorldCoords(THREE, aframeCamera, camera, _ref5, depth) {\n      var directionX = _ref5.x,\n          directionY = _ref5.y,\n          directionZ = _ref5.z;\n\n\n      initialized = initialized || initialize(THREE);\n\n      cameraPositionToVec3(aframeCamera, cameraPosAsVec3);\n      direction.set(directionX, directionY, directionZ);\n\n      // A line from the camera position toward (and through) the plane\n      var newPosition = rayPlaneIntersection(camera.getWorldDirection(), depth, direction);\n\n      // Reposition back to the camera position\n\n      var _newPosition$add = newPosition.add(cameraPosAsVec3),\n          x = _newPosition$add.x,\n          y = _newPosition$add.y,\n          z = _newPosition$add.z;\n\n      return { x: x, y: y, z: z };\n    }\n  };\n}(),\n    directionToWorldCoords = _ref4.directionToWorldCoords;\n\nvar _ref6 = function selectItemFunction() {\n\n  var initialized = false;\n\n  var cameraPosAsVec3 = void 0;\n  var directionAsVec3 = void 0;\n  var raycaster = void 0;\n  var plane = void 0;\n\n  function initialize(THREE) {\n    plane = new THREE.Plane();\n    cameraPosAsVec3 = new THREE.Vector3();\n    directionAsVec3 = new THREE.Vector3();\n    raycaster = new THREE.Raycaster();\n\n    // TODO: From camera values?\n    raycaster.far = Infinity;\n    raycaster.near = 0;\n\n    return true;\n  }\n\n  return {\n    selectItem: function selectItem(THREE, selector, camera, clientX, clientY) {\n\n      initialized = initialized || initialize(THREE);\n\n      var _screenCoordsToDirect = screenCoordsToDirection(THREE, camera, { x: clientX, y: clientY }),\n          directionX = _screenCoordsToDirect.x,\n          directionY = _screenCoordsToDirect.y,\n          directionZ = _screenCoordsToDirect.z;\n\n      cameraPositionToVec3(camera, cameraPosAsVec3);\n      directionAsVec3.set(directionX, directionY, directionZ);\n\n      raycaster.set(cameraPosAsVec3, directionAsVec3);\n\n      // Push meshes onto list of objects to intersect.\n      // TODO: Can we do this at some other point instead of every time a ray is\n      // cast? Is that a micro optimization?\n      var objects = Array.from(camera.sceneEl.querySelectorAll('[' + selector + ']')).map(function (object) {\n        return object.object3D;\n      });\n\n      var recursive = true;\n\n      var intersected = raycaster.intersectObjects(objects, recursive)\n      // Only keep intersections against objects that have a reference to an entity.\n      .filter(function (intersection) {\n        return !!intersection.object.el;\n      })\n      // Only keep ones that are visible\n      .filter(function (intersection) {\n        return intersection.object.parent.visible;\n      })\n      // The first element is the closest\n      [0]; // eslint-disable-line no-unexpected-multiline\n\n      if (!intersected) {\n        return {};\n      }\n\n      var point = intersected.point,\n          object = intersected.object;\n\n      // Aligned to the world direction of the camera\n      // At the specified intersection point\n\n      plane.setFromNormalAndCoplanarPoint(camera.components.camera.camera.getWorldDirection().clone().negate(), point.clone().sub(cameraPosAsVec3));\n\n      var depth = plane.constant;\n\n      var offset = point.sub(object.getWorldPosition());\n\n      return { depth: depth, offset: offset, element: object.el };\n    }\n  };\n}(),\n    selectItem = _ref6.selectItem;\n\nfunction dragItem(THREE, element, offset, camera, depth, mouseInfo) {\n\n  var threeCamera = camera.components.camera.camera;\n\n  // Setting up for rotation calculations\n  var startCameraRotationInverse = threeCamera.getWorldQuaternion().inverse();\n  var startElementRotation = element.object3D.getWorldQuaternion();\n  var elementRotationOrder = element.object3D.rotation.order;\n\n  var rotationQuaternion = new THREE.Quaternion();\n  var rotationEuler = element.object3D.rotation.clone();\n\n  var offsetVector = new THREE.Vector3(offset.x, offset.y, offset.z);\n  var lastMouseInfo = mouseInfo;\n\n  var nextRotation = {\n    x: THREE.Math.radToDeg(rotationEuler.x),\n    y: THREE.Math.radToDeg(rotationEuler.y),\n    z: THREE.Math.radToDeg(rotationEuler.z)\n  };\n\n  var activeCamera = element.sceneEl.systems.camera.activeCameraEl;\n\n  var isChildOfActiveCamera = someParent(element, function (parent) {\n    return parent === activeCamera;\n  });\n\n  function onMouseMove(_ref7) {\n    var clientX = _ref7.clientX,\n        clientY = _ref7.clientY;\n\n\n    lastMouseInfo = { clientX: clientX, clientY: clientY };\n\n    var direction = screenCoordsToDirection(THREE, camera, { x: clientX, y: clientY });\n\n    var _directionToWorldCoor = directionToWorldCoords(THREE, camera, camera.components.camera.camera, direction, depth),\n        x = _directionToWorldCoor.x,\n        y = _directionToWorldCoor.y,\n        z = _directionToWorldCoor.z;\n\n    var rotationDiff = void 0;\n\n    // Start by rotating backwards from the initial camera rotation\n    rotationDiff = rotationQuaternion.copy(startCameraRotationInverse);\n\n    // rotate the offset\n    offsetVector.set(offset.x, offset.y, offset.z);\n\n    // Then add the current camera rotation\n    rotationDiff = rotationQuaternion.multiply(threeCamera.getWorldQuaternion());\n\n    offsetVector.applyQuaternion(rotationDiff);\n\n    if (!isChildOfActiveCamera) {\n      // And correctly offset rotation\n      rotationDiff.multiply(startElementRotation);\n\n      rotationEuler.setFromQuaternion(rotationDiff, elementRotationOrder);\n    }\n\n    nextRotation.x = THREE.Math.radToDeg(rotationEuler.x);\n    nextRotation.y = THREE.Math.radToDeg(rotationEuler.y);\n    nextRotation.z = THREE.Math.radToDeg(rotationEuler.z);\n\n    var nextPosition = { x: x - offsetVector.x, y: y - offsetVector.y, z: z - offsetVector.z };\n\n    // When the element has parents, we need to convert its new world position\n    // into new local position of its parent element\n    if (element.parentEl !== element.sceneEl) {\n\n      // The new world position\n      offsetVector.set(nextPosition.x, nextPosition.y, nextPosition.z);\n\n      // Converted\n      element.parentEl.object3D.worldToLocal(offsetVector);\n\n      nextPosition.x = offsetVector.x;\n      nextPosition.y = offsetVector.y;\n      nextPosition.z = offsetVector.z;\n    }\n\n    element.emit(DRAG_MOVE_EVENT, { nextPosition: nextPosition, nextRotation: nextRotation, clientX: clientX, clientY: clientY });\n\n    element.setAttribute('position', nextPosition);\n\n    element.setAttribute('rotation', nextRotation);\n  }\n\n  function onTouchMove(_ref8) {\n    var _ref8$changedTouches = _slicedToArray(_ref8.changedTouches, 1),\n        touchInfo = _ref8$changedTouches[0];\n\n    onMouseMove(touchInfo);\n  }\n\n  function onCameraChange(_ref9) {\n    var detail = _ref9.detail;\n\n    if ((detail.name === 'position' || detail.name === 'rotation') && !(0, _deepEqual2.default)(detail.oldData, detail.newData)) {\n      onMouseMove(lastMouseInfo);\n    }\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('touchmove', onTouchMove);\n  camera.addEventListener('componentchanged', onCameraChange);\n\n  // The \"unlisten\" function\n  return function (_) {\n    document.removeEventListener('mousemove', onMouseMove);\n    document.removeEventListener('touchmove', onTouchMove);\n    camera.removeEventListener('componentchanged', onCameraChange);\n  };\n}\n\n// Closure to close over the removal of the event listeners\n\nvar _ref10 = function getDidMountAndUnmount() {\n\n  var removeClickListeners = void 0;\n  var removeDragListeners = void 0;\n  var cache = [];\n\n  function initialize(THREE, componentName) {\n\n    // TODO: Based on a scene from the element passed in?\n    var scene = document.querySelector('a-scene');\n    // delay loading of this as we're not 100% if the scene has loaded yet or not\n    var camera = void 0;\n    var draggedElement = void 0;\n    var dragInfo = void 0;\n    var positionLog = [];\n\n    function cleanUpPositionLog() {\n      var now = performance.now();\n      while (positionLog.length && now - positionLog[0].time > TIME_TO_KEEP_LOG) {\n        // remove the first element;\n        positionLog.shift();\n      }\n    }\n\n    function onDragged(_ref11) {\n      var nextPosition = _ref11.detail.nextPosition;\n\n      // Continuously clean up so we don't get huge logs built up\n      cleanUpPositionLog();\n      positionLog.push({\n        position: Object.assign({}, nextPosition),\n        time: performance.now()\n      });\n    }\n\n    function onMouseDown(_ref12) {\n      var clientX = _ref12.clientX,\n          clientY = _ref12.clientY;\n\n      var _selectItem = selectItem(THREE, componentName, camera, clientX, clientY),\n          depth = _selectItem.depth,\n          offset = _selectItem.offset,\n          element = _selectItem.element;\n\n      if (element) {\n        (function () {\n          // Can only drag one item at a time, so no need to check if any\n          // listener is already set up\n          var removeDragItemListeners = dragItem(THREE, element, offset, camera, depth, {\n            clientX: clientX,\n            clientY: clientY\n          });\n\n          draggedElement = element;\n\n          dragInfo = {\n            offset: { x: offset.x, y: offset.y, z: offset.z },\n            depth: depth,\n            clientX: clientX,\n            clientY: clientY\n          };\n\n          element.addEventListener(DRAG_MOVE_EVENT, onDragged);\n\n          removeDragListeners = function removeDragListeners(_) {\n            element.removeEventListener(DRAG_MOVE_EVENT, onDragged);\n            // eslint-disable-next-line no-unused-expressions\n            removeDragItemListeners && removeDragItemListeners();\n            // in case this removal function gets called more than once\n            removeDragItemListeners = null;\n          };\n\n          element.emit(DRAG_START_EVENT, dragInfo);\n        })();\n      }\n    }\n\n    function calculateVelocity() {\n\n      if (positionLog.length < 2) {\n        return 0;\n      }\n\n      var start = positionLog[positionLog.length - 1];\n      var end = positionLog[0];\n\n      var deltaTime = 1000 / (start.time - end.time);\n      return {\n        x: (start.position.x - end.position.x) * deltaTime, // m/s\n        y: (start.position.y - end.position.y) * deltaTime, // m/s\n        z: (start.position.z - end.position.z) * deltaTime };\n    }\n\n    function onMouseUp(_ref13) {\n      var clientX = _ref13.clientX,\n          clientY = _ref13.clientY;\n\n\n      if (!draggedElement) {\n        return;\n      }\n\n      cleanUpPositionLog();\n\n      var velocity = calculateVelocity();\n\n      draggedElement.emit(DRAG_END_EVENT, Object.assign({}, dragInfo, { clientX: clientX, clientY: clientY, velocity: velocity }));\n\n      removeDragListeners && removeDragListeners(); // eslint-disable-line no-unused-expressions\n      removeDragListeners = undefined;\n    }\n\n    function onTouchStart(_ref14) {\n      var _ref14$changedTouches = _slicedToArray(_ref14.changedTouches, 1),\n          touchInfo = _ref14$changedTouches[0];\n\n      onMouseDown(touchInfo);\n    }\n\n    function onTouchEnd(_ref15) {\n      var _ref15$changedTouches = _slicedToArray(_ref15.changedTouches, 1),\n          touchInfo = _ref15$changedTouches[0];\n\n      onMouseUp(touchInfo);\n    }\n\n    function run() {\n\n      camera = scene.camera.el;\n\n      // TODO: Attach to canvas?\n      document.addEventListener('mousedown', onMouseDown);\n      document.addEventListener('mouseup', onMouseUp);\n\n      document.addEventListener('touchstart', onTouchStart);\n      document.addEventListener('touchend', onTouchEnd);\n\n      removeClickListeners = function removeClickListeners(_) {\n        document.removeEventListener('mousedown', onMouseDown);\n        document.removeEventListener('mouseup', onMouseUp);\n\n        document.removeEventListener('touchstart', onTouchStart);\n        document.removeEventListener('touchend', onTouchEnd);\n      };\n    }\n\n    if (scene.hasLoaded) {\n      run();\n    } else {\n      scene.addEventListener('loaded', run);\n    }\n  }\n\n  function tearDown() {\n    removeClickListeners && removeClickListeners(); // eslint-disable-line no-unused-expressions\n    removeClickListeners = undefined;\n  }\n\n  return {\n    didMount: function didMount(element, THREE, componentName) {\n\n      if (cache.length === 0) {\n        initialize(THREE, componentName);\n      }\n\n      if (cache.indexOf(element) === -1) {\n        cache.push(element);\n      }\n    },\n    didUnmount: function didUnmount(element) {\n\n      var cacheIndex = cache.indexOf(element);\n\n      removeDragListeners && removeDragListeners(); // eslint-disable-line no-unused-expressions\n      removeDragListeners = undefined;\n\n      if (cacheIndex === -1) {\n        return;\n      }\n\n      // remove that element\n      cache.splice(cacheIndex, 1);\n\n      if (cache.length === 0) {\n        tearDown();\n      }\n    }\n  };\n}(),\n    didMount = _ref10.didMount,\n    didUnmount = _ref10.didUnmount;\n\n/**\n * @param aframe {Object} The Aframe instance to register with\n * @param componentName {String} The component name to use. Default: 'click-drag'\n */\n\n\nfunction aframeDraggableComponent(aframe) {\n  var componentName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : COMPONENT_NAME;\n\n\n  var THREE = aframe.THREE;\n\n  /**\n   * Draggable component for A-Frame.\n   */\n  aframe.registerComponent(componentName, {\n    schema: {},\n\n    /**\n     * Called once when component is attached. Generally for initial setup.\n     */\n    init: function init() {\n      didMount(this, THREE, componentName);\n    },\n\n\n    /**\n     * Called when component is attached and when component data changes.\n     * Generally modifies the entity based on the data.\n     *\n     * @param oldData\n     */\n    update: function update() {},\n\n\n    /**\n     * Called when a component is removed (e.g., via removeAttribute).\n     * Generally undoes all modifications to the entity.\n     */\n    remove: function remove() {\n      didUnmount(this);\n    },\n\n\n    /**\n     * Called when entity pauses.\n     * Use to stop or remove any dynamic or background behavior such as events.\n     */\n    pause: function pause() {\n      didUnmount(this);\n    },\n\n\n    /**\n     * Called when entity resumes.\n     * Use to continue or add any dynamic or background behavior such as events.\n     */\n    play: function play() {\n      didMount(this, THREE, componentName);\n    }\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!******************************************!*\
  !*** ./node_modules/deep-equal/index.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("var pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(/*! ./lib/keys.js */ 3);\nvar isArguments = __webpack_require__(/*! ./lib/is_arguments.js */ 4);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2luZGV4LmpzPzg2NWMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi9saWIva2V5cy5qcycpO1xudmFyIGlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9saWIvaXNfYXJndW1lbnRzLmpzJyk7XG5cbnZhciBkZWVwRXF1YWwgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKSB7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIERhdGUgJiYgZXhwZWN0ZWQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMuIE90aGVyIHBhaXJzIHRoYXQgZG8gbm90IGJvdGggcGFzcyB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgPT0uXG4gIH0gZWxzZSBpZiAoIWFjdHVhbCB8fCAhZXhwZWN0ZWQgfHwgdHlwZW9mIGFjdHVhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0cy5zdHJpY3QgPyBhY3R1YWwgPT09IGV4cGVjdGVkIDogYWN0dWFsID09IGV4cGVjdGVkO1xuXG4gIC8vIDcuNC4gRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKHgpIHtcbiAgaWYgKCF4IHx8IHR5cGVvZiB4ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgeC5sZW5ndGggIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgeC5jb3B5ICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB4LnNsaWNlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh4Lmxlbmd0aCA+IDAgJiYgdHlwZW9mIHhbMF0gIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiLCBvcHRzKSB7XG4gIHZhciBpLCBrZXk7XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS5cbiAgaWYgKGEucHJvdG90eXBlICE9PSBiLnByb3RvdHlwZSkgcmV0dXJuIGZhbHNlO1xuICAvL35+fkkndmUgbWFuYWdlZCB0byBicmVhayBPYmplY3Qua2V5cyB0aHJvdWdoIHNjcmV3eSBhcmd1bWVudHMgcGFzc2luZy5cbiAgLy8gICBDb252ZXJ0aW5nIHRvIGFycmF5IHNvbHZlcyB0aGUgcHJvYmxlbS5cbiAgaWYgKGlzQXJndW1lbnRzKGEpKSB7XG4gICAgaWYgKCFpc0FyZ3VtZW50cyhiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBkZWVwRXF1YWwoYSwgYiwgb3B0cyk7XG4gIH1cbiAgaWYgKGlzQnVmZmVyKGEpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSxcbiAgICAgICAga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7Ly9oYXBwZW5zIHdoZW4gb25lIGlzIGEgc3RyaW5nIGxpdGVyYWwgYW5kIHRoZSBvdGhlciBpc24ndFxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIG9wdHMpKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBhID09PSB0eXBlb2YgYjtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!*********************************************!*\
  !*** ./node_modules/deep-equal/lib/keys.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2xpYi9rZXlzLmpzPzU4ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIE9iamVjdC5rZXlzID09PSAnZnVuY3Rpb24nXG4gID8gT2JqZWN0LmtleXMgOiBzaGltO1xuXG5leHBvcnRzLnNoaW0gPSBzaGltO1xuZnVuY3Rpb24gc2hpbSAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIGtleXMucHVzaChrZXkpO1xuICByZXR1cm4ga2V5cztcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2RlZXAtZXF1YWwvbGliL2tleXMuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*****************************************************!*\
  !*** ./node_modules/deep-equal/lib/is_arguments.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWVwLWVxdWFsL2xpYi9pc19hcmd1bWVudHMuanM/OWZmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3VwcG9ydHNBcmd1bWVudHNDbGFzcyA9IChmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50cylcbn0pKCkgPT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHN1cHBvcnRzQXJndW1lbnRzQ2xhc3MgPyBzdXBwb3J0ZWQgOiB1bnN1cHBvcnRlZDtcblxuZXhwb3J0cy5zdXBwb3J0ZWQgPSBzdXBwb3J0ZWQ7XG5mdW5jdGlvbiBzdXBwb3J0ZWQob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqZWN0KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcbn07XG5cbmV4cG9ydHMudW5zdXBwb3J0ZWQgPSB1bnN1cHBvcnRlZDtcbmZ1bmN0aW9uIHVuc3VwcG9ydGVkKG9iamVjdCl7XG4gIHJldHVybiBvYmplY3QgJiZcbiAgICB0eXBlb2Ygb2JqZWN0ID09ICdvYmplY3QnICYmXG4gICAgdHlwZW9mIG9iamVjdC5sZW5ndGggPT0gJ251bWJlcicgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCAnY2FsbGVlJykgJiZcbiAgICAhT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCwgJ2NhbGxlZScpIHx8XG4gICAgZmFsc2U7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9saWIvaXNfYXJndW1lbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);